package com.sdacademy.projectwithpersistence.persistence.repository;

import java.util.Optional;

import org.springframework.data.repository.CrudRepository;
import org.springframework.transaction.annotation.Transactional;

import com.sdacademy.projectwithpersistence.persistence.model.Project;

public interface ProjectRepository extends CrudRepository<Project, Long> {

	// we use methods with derived queries
	Optional<Project> findByCodeEquals(String code);

	int countByName(String name);

	// we use methods with more complex derived queries
	Iterable<Project> findByNameStartingWith(String name);
	Iterable<Project> findDistinctByTasksNameContaining(String taskName);
	
	// delete projects
	Iterable<Project> findByNameContaining(String name);

    @Transactional
    Long deleteByNameContaining(String name);

	
}
