package com.sdacademy.projectwithpersistence;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import com.sdacademy.projectwithpersistence.persistence.model.Project;
import com.sdacademy.projectwithpersistence.persistence.model.Task;
import com.sdacademy.projectwithpersistence.persistence.model.User;
import com.sdacademy.projectwithpersistence.persistence.repository.ProjectRepository;
import com.sdacademy.projectwithpersistence.persistence.repository.TaskRepository;
import com.sdacademy.projectwithpersistence.persistence.repository.UserRepository;

@SpringBootApplication
public class ProjectWithPersistenceApplication implements ApplicationRunner {

	private static final Logger LOG = LoggerFactory.getLogger(ProjectWithPersistenceApplication.class);

	@Autowired
	private ProjectRepository projectRepository;

	@Autowired
	private UserRepository userRepository;

	@Autowired
	private TaskRepository taskRepository;

	public static void main(String[] args) {
		SpringApplication.run(ProjectWithPersistenceApplication.class, args);
	}

	@Override
	public void run(ApplicationArguments args) throws Exception {
		// we display in several logs all the data in the tables
		Iterable<Project> allProjects = projectRepository.findAll();
		LOG.info("All Projects:\n{}", allProjects);
		Iterable<Task> allTasks = taskRepository.findAll();
		LOG.info("All Tasks:\n{}", allTasks);
		Iterable<User> allUser = userRepository.findAll();
		LOG.info("All Users:\n{}", allUser);

		// we display a task and the number of users
		Optional<Task> task1 = taskRepository.findById(1L);
		LOG.info("Task by id 1:\n{}", task1);
		long noOfUsers = userRepository.count();
		LOG.info("Number of users:\n{}", noOfUsers);

	}

}
